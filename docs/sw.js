"use strict";var precacheConfig=[["/1af7431abef36bde285e53991cbe4fa5.eot","1af7431abef36bde285e53991cbe4fa5"],["/5852230134ee6e7a68d78c1e803b49aa.svg","5852230134ee6e7a68d78c1e803b49aa"],["/5ce3212c7caaa47cc784baccf5976131.jpg","5ce3212c7caaa47cc784baccf5976131"],["/623d3dfb509a3cf6018035e16f5e06df.woff","623d3dfb509a3cf6018035e16f5e06df"],["/6435abdd0abd62bee3cfbbe712aeca53.jpg","6435abdd0abd62bee3cfbbe712aeca53"],["/a091dd0220b1c1043881546e617ce96c.ttf","a091dd0220b1c1043881546e617ce96c"],["/assets/computer.jpg","6435abdd0abd62bee3cfbbe712aeca53"],["/assets/dark_texture.jpg","71525cc3a4f0bae5180a68072f8437aa"],["/assets/favicon.ico","53ac170e970ad034a55ee15ce198708c"],["/assets/icons/android-chrome-192x192.png","59e221032ab061cad83b6ce2bcddbde8"],["/assets/icons/android-chrome-512x512.png","cf3fdf7af60a294d6d3f48cb7ad82488"],["/assets/icons/apple-touch-icon.png","a0e46feb3cc577478b127936e739dd08"],["/assets/icons/favicon-16x16.png","d712b605ed58419c7e6d4ab885d147b7"],["/assets/icons/favicon-32x32.png","2f7ce797cf8f198dedb9a9f38b7ef13b"],["/assets/icons/mstile-150x150.png","ba817517b2c4e1ba1ce802c4d4fafdb4"],["/assets/user.jpg","5ce3212c7caaa47cc784baccf5976131"],["/bundle.d20a8.js","1f18d70f4bba4176a6606c8c6861f47b"],["/favicon.ico","53ac170e970ad034a55ee15ce198708c"],["/index.html","a78d4c3acd0fa2bf6bb7709434e1c4fc"],["/manifest.json","97df67e087a13aa99a3b4a2ffd333d33"],["/route-about.chunk.32fd5.js","5f4d3112ff1210e082016cdd0cd08caf"],["/route-contacts.chunk.26542.js","8a909a64cddccc7641a485c3c3946651"],["/route-home.chunk.14bda.js","e0cd552aeb26516d880c06708940f336"],["/route-portfolio.chunk.74532.js","b2244c28b380a0f022a438a1c6384a12"],["/style.f380f.css","bf331caab84aaf6de404f7251a0ceb02"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,!1);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"index.html"),a=urlsToCacheKeys.has(t));!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("index.html",self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});